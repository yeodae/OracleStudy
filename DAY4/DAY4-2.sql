SELECT * FROM department;
SELECT * FROM STUDENT2;



--SELF JOIN  
SELECT D.DEPTNO, D.DNAME, D2.DNAME
FROM department D
INNER JOIN department D2 ON D.DEPTNO = D2.PART --SELF JOIN
WHERE D.PART IS NULL;

--컴퓨터정보학부의 학과 목록 출력
SELECT  D.DEPTNO, D.DNAME, D2.DNAME
FROM department D
INNER JOIN department D2 ON D.DEPTNO = D2.PART --SELF JOIN
WHERE D.DNAME = '컴퓨터정보학부';

--1. 학생들의 주민번호를 뒷자리 모자이크처리후, 성별을 구분하시오

SELECT SUBSTR(JUMIN, 1, 6) || '-' || RPAD(SUBSTR(JUMIN, 7, 1), 7, '*') AS 주민번호
FROM STUDENT2;

SELECT 
    NAME
    , RPAD(SUBSTR(SUBSTR(JUMIN, 1, 6) || '-' || SUBSTR(JUMIN, 7, 12), 1, 7), 14, '*') AS 주민번호
    , SUBSTR(JUMIN, 1, 6) || '-' || RPAD(SUBSTR(JUMIN, 7, 1), 7, '*') AS 주민번호
    , DECODE(SUBSTR(JUMIN, 7, 1), '1', '남자', '2', '여자') AS 성별
FROM STUDENT2;

SELECT SUBSTR(JUMIN,1,6)||'-'||RPAD(SUBSTR(JUMIN,7,1),7,'*') AS 주민번호
    ,DECODE(SUBSTR(JUMIN,7,1),'1','남자','2','여자') AS 성별
FROM STUDENT2;


-- 이름가운데 * 표시
SELECT SUBSTR(NAME,1,1)||'*'||SUBSTR(NAME,3,3)
FROM STUDENT2;

SELECT SUBSTR(NAME,1,1) || '*' || SUBSTR(NAME,3,3)
FROM STUDENT2;

-- 학생 목록 출력, 학부 포함
SELECT * FROM department;
SELECT * FROM STUDENT2;

SELECT NAME, D2.DNAME
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO;

--2.평균 키가 가장 큰 학과의 학과명, 평균 키를 구하시오.
SELECT D.DNAME,AH
FROM DEPARTMENT D 
INNER JOIN(
    SELECT DEPTNO1, ROUND(AVG(HEIGHT)) AS AH
    FROM STUDENT2 S
    INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
    GROUP BY DEPTNO1
    ORDER BY AH DESC
) D2 ON D.DEPTNO = D2.DEPTNO1
WHERE ROWNUM =1;


SELECT *
FROM (
    SELECT DEPTNO1,DNAME, ROUND(AVG(HEIGHT)) AS AH
    FROM STUDENT2 S
    INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
    GROUP BY DEPTNO1,DNAME
    ORDER BY AH DESC
) WHERE ROWNUM=1;
    

SELECT D.DNAME, ROUND(AVG(HEIGHT)) AS AH
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO
GROUP BY D.DNAME;

--2-1. 각 학과별 키가 가장 큰 학생의 이름 학과명 키를 구하시오
SELECT NAME, D.DNAME, S2.HEIGHT
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN ( 
    SELECT D.DNAME, ROUND(MAX(HEIGHT)) AS HEIGHT
    FROM STUDENT2 S
    INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
    GROUP BY D.DNAME
) S2 ON S.HEIGHT = S2.HEIGHT AND D.DNAME = S2.DNAME
;

SELECT NAME,D.DNAME, S2.HEIGHT
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN ( 
    SELECT DEPTNO1 ,ROUND(MAX(HEIGHT)) AS HEIGHT
    FROM STUDENT2 S
    GROUP BY DEPTNO1
) S2 ON S.HEIGHT = S2.HEIGHT AND S.DEPTNO1 = S2.DEPTNO1;

--3.부전공(DEPTNO2)를 가진 학생의 목록 출력(학부 포함)
SELECT *
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO
WHERE DEPTNO2 IS NOT NULL;

SELECT S.*,D2.DNAME
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO2 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO;

--3-1.학생 목록을 출력, 학번, 이름, 부전공의 학과, 학부(부전공이 없을 경우 NULL로 출력)
SELECT STUDNO,NAME
    ,NVL(D2.DNAME,'없음') AS 부전공
    ,NVL(D.BUILD,'없음') AS 부전공학부
FROM STUDENT2 S
LEFT JOIN DEPARTMENT D ON S.DEPTNO2 = D.DEPTNO 
LEFT JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO;

--3-2.공과대학에 속한 학생의수
SELECT COUNT(*)
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO
WHERE D2.PART = '10';

SELECT COUNT(D3.DNAME) AS 공대학생수
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO
INNER JOIN DEPARTMENT D3 ON D2.PART = D3.DEPTNO
WHERE D3.DNAME = '공과대학';

--각 대학별 학생들의 평균키
SELECT D3.DEPTNO, D3.DNAME, AVG(HEIGHT)
FROM STUDENT2 S
INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO
INNER JOIN DEPARTMENT D3 ON D2.PART = D3.DEPTNO
GROUP BY D3.DEPTNO, D3.DNAME;

--컴퓨터정보학부와 메카트로닉스학부 의 평균 키의 차이값
SELECT MAX(HEIGHT) - MIN(HEIGHT) AS 차이값
FROM (
    SELECT D2.DNAME,D2.DEPTNO, AVG(HEIGHT) AS HEIGHT
    FROM STUDENT2 S
    INNER JOIN DEPARTMENT D ON S.DEPTNO1 = D.DEPTNO
    INNER JOIN DEPARTMENT D2 ON D.PART = D2.DEPTNO
    WHERE D2.DNAME IN ('컴퓨터정보학부','메카트로닉스학부')
    GROUP BY D2.DNAME,D2.DEPTNO );