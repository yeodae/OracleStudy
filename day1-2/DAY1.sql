--CRUD
--CREATE, READ, UPDATE, DELETE
--데이터 삽입(INSERT)
INSERT INTO STUDENT(STU_NO, STU_NAME, STU_DEPT)VALUES(20230612,'홍길동','컴퓨터정보');

SELECT *
FROM STUDENT;

INSERT INTO STUDENT(STU_NO, STU_NAME, STU_DEPT,STU_GRADE, STU_GENDER)VALUES(20231234,'홍길동','기계',1,'M');

DELETE
FROM STUDENT
WHERE STU_NO = 20231234;

--각 학과에서 가장 키가 큰 값
SELECT STU_DEPT, MAX(STU_HEIGHT)
FROM STUDENT
GROUP BY STU_DEPT;

--각 성별별 가장 키 큰 값
SELECT STU_GENDER, MAX(STU_HEIGHT)
FROM STUDENT
GROUP BY STU_GENDER;

--각 학과별 평균 몸무게
SELECT STU_DEPT, AVG(STU_WEIGHT)
FROM STUDENT
GROUP BY STU_DEPT;

--기계과 학생들의 평균 키보다 큰 학생들 구하기
SELECT *
FROM STUDENT
WHERE STU_HEIGHT >(
    SELECT AVG(STU_HEIGHT)
    FROM STUDENT
    WHERE STU_DEPT = '기계');
--컴퓨터정보 학생들의 평균 몸무게보다 큰 학생들 구하기
SELECT *
FROM STUDENT
WHERE STU_WEIGHT >(
    SELECT AVG(STU_WEIGHT)
    FROM STUDENT
    WHERE STU_DEPT = '컴퓨터정보');
--컴퓨터정보과 학생중 가장 큰 학생보다 큰 키를 가진 학생들 구하기
SELECT *
FROM STUDENT
WHERE STU_HEIGHT>(
    SELECT MAX(STU_HEIGHT)
    FROM STUDENT
    WHERE STU_DEPT = '컴퓨터정보');
    
--각학과의 가장 키가 큰 학생의 학번, 이름 , 키 출력
SELECT STU_NO,STU_NAME,STU_DEPT,STU_HEIGHT
FROM STUDENT 
WHERE (STU_DEPT, STU_HEIGHT) IN (
    SELECT STU_DEPT,MAX(STU_HEIGHT)
    FROM STUDENT
    GROUP BY STU_DEPT);

--키 최소
SELECT MIN(STU_HEIGHT)
FROM STUDENT;

--키 평균
SELECT AVG(STU_HEIGHT)
FROM STUDENT;

SELECT *
FROM STUDENT
WHERE STU_HEIGHT > (SELECT AVG(STU_HEIGHT) FROM STUDENT);